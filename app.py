# -*- coding: utf-8 -*-
"""LLM ChatMate.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17WJor0lrdx0WUPxHmUSXFkjx8mPF0Ho1
"""

from google.cloud import aiplatform
import streamlit as st
from streamlit_chat import message
from streamlit_extras.colored_header import colored_header
from streamlit_extras.add_vertical_space import add_vertical_space
from hugchat import hugchat

def setup_vertexai_client():
    client = aiplatform.Client(project='docufy-265106')

# Set page configuration
st.set_page_config(page_title="Saluni - Ask Me Anything")

# Initialize session state variables if they don't exist
if 'bot_response' not in st.session_state:
    st.session_state['bot_response'] = ["I'm Saluni, How may I help you?"]
if 'user_input' not in st.session_state:
    st.session_state['user_input'] = ['Hi!']

# Layout of input/response containers
input_container = st.container()
colored_header(label='', description='', color_name='blue-30')
response_container = st.container()

# User input
def get_input():
    input_text = st.text_input("You: ", "", key="input")
    return input_text

with input_container:
    user_input = get_input()

# Response output
def generate_response(prompt):
    chatbot = hugchat.ChatBot(cookie_path="cookies.json")
    response = chatbot.chat(prompt)
    return response

with response_container:
    if user_input:
        response = generate_response(user_input)
        st.session_state.user_input.append(user_input)
        st.session_state.bot_response.append(response)

    # Safely access session state variables using get
    user_messages = st.session_state.get('user_input', [])
    bot_responses = st.session_state.get('bot_response', [])

    # Display messages
    for i in range(len(bot_responses)):
        user_msg = str(user_messages[i])
        bot_msg = str(bot_responses[i])
        message(user_msg, is_user=True, key=str(i) + '_user')
        message(bot_msg, key=str(i))
